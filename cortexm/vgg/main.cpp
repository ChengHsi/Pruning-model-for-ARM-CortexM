#include "mbed.h"
#include "arm_math.h"
#include "cortexm_main.h"
#include <algorithm>

#define IMG_NUM 20
//Serial port(USBTX, USBRX, 115200);
//Serial port(USBTX, USBRX);


static const int IMAGE_SIZE = 3 * 32 * 32;

int img[IMAGE_SIZE] = {-56,-55,-52,-39,-37,-37,-54,-52,-53,-64,-61,-64,-44,-43,-46,-60,-61,-59,-60,-61,-60,-56,-57,-57,-55,-57,-56,-60,-62,-60,-67,-68,-64,-73,-75,-71,-68,-69,-65,-62,-64,-60,-64,-65,-62,-66,-65,-60,-71,-69,-64,-66,-65,-62,-59,-60,-58,-42,-47,-46,-31,-36,-36,-45,-53,-52,-57,-65,-63,-57,-65,-61,-55,-64,-57,-58,-67,-60,-62,-68,-65,-63,-67,-67,-63,-67,-65,-66,-70,-66,-70,-74,-68,-67,-72,-65,-70,-69,-65,-63,-61,-61,-47,-45,-47,-49,-47,-50,-28,-26,-29,-37,-38,-38,-59,-60,-59,-63,-65,-64,-67,-68,-67,-67,-69,-67,-68,-70,-67,-72,-73,-70,-69,-70,-67,-46,-47,-44,-57,-57,-54,-63,-62,-59,-68,-66,-62,-71,-70,-67,-68,-69,-67,-56,-59,-58,-44,-48,-49,-44,-50,-49,-42,-49,-47,-44,-51,-47,-53,-60,-54,-60,-67,-60,-64,-69,-65,-66,-68,-66,-66,-69,-66,-70,-73,-69,-70,-74,-68,-67,-71,-65,-44,-42,-41,-68,-66,-66,-59,-57,-58,-55,-53,-55,-36,-35,-37,-34,-35,-34,-29,-30,-29,-16,-17,-17,-35,-36,-35,-65,-66,-64,-69,-70,-68,-73,-74,-70,-70,-72,-69,-57,-58,-55,-57,-59,-55,-59,-59,-56,-58,-57,-54,-68,-68,-65,-68,-69,-66,-56,-57,-56,-52,-55,-54,-47,-52,-50,-40,-44,-42,-41,-45,-41,-44,-50,-43,-47,-53,-45,-37,-40,-35,-42,-43,-40,-62,-64,-60,-70,-72,-68,-68,-70,-66,-66,-68,-63,-27,-25,-26,-49,-47,-47,-54,-52,-54,-63,-61,-62,-63,-62,-62,-49,-50,-49,-34,-35,-35,-38,-39,-39,-47,-48,-48,-59,-60,-59,-65,-67,-64,-71,-72,-69,-62,-64,-60,-65,-66,-63,-63,-64,-61,-45,-47,-44,-44,-45,-42,-58,-59,-57,-66,-67,-64,-57,-57,-55,-64,-65,-62,-48,-50,-47,-36,-38,-35,-37,-40,-35,-13,-15,-9,17,14,22,34,33,39,-5,-5,-1,-44,-44,-39,-55,-56,-51,-63,-64,-60,-68,-69,-64,-48,-46,-48,-64,-62,-62,-68,-66,-65,-69,-67,-66,-71,-71,-69,-71,-72,-70,-66,-67,-67,-67,-69,-67,-65,-67,-65,-62,-64,-63,-69,-70,-68,-70,-72,-69,-63,-65,-62,-62,-64,-60,-67,-68,-64,-32,-33,-32,-32,-35,-34,-64,-65,-64,-66,-67,-64,-62,-62,-59,-53,-52,-49,-50,-50,-47,-42,-43,-40,-10,-11,-6,24,24,31,40,40,48,45,46,54,12,14,21,17,19,24,1,3,7,-68,-67,-63,-75,-74,-70,-59,-57,-59,-49,-47,-49,-63,-62,-60,-74,-73,-70,-73,-72,-69,-70,-72,-69,-64,-65,-64,-63,-65,-64,-62,-64,-62,-59,-60,-59,-70,-72,-69,-72,-74,-70,-70,-71,-68,-66,-67,-64,-65,-67,-64,-41,-44,-43,-23,-26,-26,-62,-65,-63,-71,-71,-68,-67,-65,-62,-61,-59,-54,-41,-39,-35,4,6,9,16,18,24,31,33,40,15,17,26,-39,-38,-29,-21,-21,-12,54,56,63,47,49,53,-33,-31,-29,-69,-69,-65,-61,-59,-62,-60,-59,-60,-60,-59,-57,-73,-72,-69,-73,-73,-69,-73,-74,-70,-61,-62,-61,-52,-53,-53,-32,-33,-32,-37,-38,-37,-65,-66,-63,-69,-70,-67,-71,-72,-69,-71,-72,-69,-67,-69,-65,-54,-57,-56,-31,-35,-36,-53,-55,-54,-73,-74,-70,-71,-69,-64,-53,-50,-44,1,4,8,31,35,38,26,29,34,50,52,60,9,11,20,-36,-35,-25,-23,-21,-12,36,39,46,65,68,73,-1,2,4,-64,-64,-59,-46,-46,-45,-60,-62,-62,-69,-71,-69,-73,-73,-70,-73,-73,-69,-73,-72,-69,-67,-67,-64,-61,-60,-60,-31,-30,-32,-31,-29,-31,-67,-67,-64,-60,-60,-56,-67,-67,-64,-73,-72,-69,-65,-65,-62,-53,-52,-52,-49,-48,-50,-56,-56,-54,-69,-69,-62,-61,-60,-50,-21,-21,-9,24,24,34,38,38,48,43,43,51,65,66,74,18,19,26,-44,-43,-35,-42,-41,-33,-1,1,8,59,62,68,16,19,24,-62,-61,-55,-57,-58,-55,-59,-63,-62,-69,-72,-70,-71,-71,-68,-72,-71,-65,-72,-72,-67,-72,-70,-67,-55,-53,-52,-51,-49,-50,-52,-50,-52,-70,-69,-65,-50,-48,-45,-52,-50,-47,-72,-70,-67,-62,-61,-58,-54,-53,-52,-52,-50,-50,-63,-62,-59,-56,-55,-48,-15,-14,-4,14,14,28,30,28,41,51,50,61,61,60,69,67,67,75,-9,-10,-3,-44,-43,-37,-26,-25,-19,35,37,43,66,69,74,22,24,30,-60,-59,-54,-63,-64,-62,-60,-64,-64,-68,-71,-70,-67,-67,-64,-70,-69,-64,-69,-69,-64,-70,-69,-66,-51,-50,-48,-50,-49,-49,-42,-40,-40,4,6,8,36,38,41,41,43,46,3,5,8,-49,-48,-44,-65,-64,-62,-50,-48,-47,-55,-54,-50,-24,-23,-17,23,24,34,36,37,48,45,43,55,56,55,64,73,73,81,60,60,67,-32,-34,-28,-45,-46,-40,-39,-38,-32,7,9,14,56,58,63,9,11,16,-61,-60,-54,-65,-65,-64,-60,-64,-64,-57,-60,-60,-54,-53,-50,-69,-68,-62,-67,-67,-62,-64,-63,-60,-46,-45,-42,-24,-23,-21,17,20,21,51,54,56,65,68,70,75,78,81,77,80,82,56,59,61,18,20,22,8,11,12,8,11,14,23,25,31,31,32,41,51,52,61,62,61,71,59,59,68,79,79,86,56,56,61,-36,-38,-34,-45,-46,-41,-47,-47,-42,-26,-25,-20,13,14,18,-9,-8,-3,-61,-61,-56,-58,-59,-56,-51,-55,-55,-44,-47,-47,-47,-47,-44,-65,-64,-59,-50,-49,-46,-23,-21,-19,-18,-17,-12,-11,-10,-6,41,43,48,60,63,65,75,78,80,80,83,85,77,80,82,75,79,81,71,74,76,70,73,76,60,62,67,44,46,52,41,43,50,50,52,59,64,64,73,67,66,74,80,81,87,54,55,59,-34,-36,-32,-44,-45,-41,-50,-52,-47,-61,-62,-58,-58,-59,-55,-45,-47,-42,-64,-65,-60,-44,-44,-42,-26,-30,-30,-24,-26,-27,-38,-38,-35,-36,-35,-31,-3,-1,2,-4,-2,1,-38,-37,-32,-13,-12,-6,52,54,60,72,76,79,77,80,81,77,80,82,74,77,79,74,77,79,73,76,79,71,73,78,63,65,70,53,55,60,50,52,58,56,57,63,55,54,62,70,69,76,80,81,86,38,38,41,-38,-39,-36,-41,-42,-39,-50,-52,-49,-62,-64,-59,-72,-74,-69,-63,-66,-62,-70,-72,-67,-36,-36,-34,-3,-6,-6,-6,-9,-9,-18,-17,-14,6,8,12,20,22,24,-5,-3,0,-41,-40,-33,-14,-13,-4,49,51,59,73,76,80,74,77,79,69,72,74,71,74,76,72,76,78,74,77,81,74,76,82,67,70,76,60,62,68,51,53,58,52,54,59,40,40,46,66,66,71,75,76,79,2,2,4,-45,-47,-45,-47,-49,-47,-60,-64,-60,-55,-59,-56,-54,-57,-54,-44,-47,-44,-67,-70,-65,-31,-31,-29,-3,-6,-7,-16,-18,-18,5,6,9,28,31,34,20,23,24,2,4,8,-41,-40,-33,-8,-8,2,49,50,60,65,67,72,71,74,76,59,62,64,70,73,75,74,77,79,75,78,83,76,78,85,75,77,83,67,69,74,50,52,56,54,56,60,40,40,46,59,60,64,69,69,72,-17,-18,-16,-54,-55,-53,-54,-56,-54,-63,-67,-64,-61,-65,-62,-47,-51,-49,-47,-50,-48,-62,-65,-62,-39,-38,-37,-33,-33,-32,-17,-16,-16,28,30,31,31,33,34,17,18,19,6,8,11,-47,-46,-40,-24,-23,-16,45,48,56,62,65,68,68,71,73,51,54,56,63,66,68,72,75,77,75,77,80,77,79,82,79,80,84,72,74,78,47,48,53,51,51,56,51,51,56,59,59,63,61,62,65,-22,-23,-19,-60,-62,-59,-63,-63,-60,-68,-69,-65,-72,-73,-69,-70,-72,-68,-63,-67,-63,-58,-62,-57,-57,-56,-54,-65,-64,-63,-16,-14,-13,33,35,36,23,25,26,25,25,26,6,8,9,-52,-50,-46,-55,-52,-47,4,8,13,56,59,62,64,67,69,33,36,38,45,48,50,64,67,69,72,74,76,75,76,78,76,76,79,74,74,78,33,32,38,25,25,31,63,62,66,70,70,73,52,52,55,-39,-40,-36,-67,-68,-64,-70,-70,-67,-73,-72,-69,-73,-73,-69,-68,-70,-66,-53,-56,-52,-44,-48,-42,-70,-69,-66,-65,-64,-62,-13,-11,-9,17,20,21,21,22,23,32,32,34,10,11,13,-50,-50,-45,-61,-59,-54,-39,-36,-30,31,34,37,62,65,68,14,16,19,13,16,18,44,47,49,61,63,64,67,68,69,71,72,74,71,71,76,8,8,14,-1,-3,4,59,59,63,75,76,79,19,18,22,-67,-69,-64,-68,-70,-65,-72,-72,-68,-74,-72,-69,-72,-71,-68,-68,-69,-65,-55,-59,-54,-37,-42,-37,-72,-71,-67,-57,-55,-52,-26,-24,-22,-3,-1,1,23,24,26,40,40,41,14,16,18,-52,-52,-47,-61,-59,-53,-54,-51,-45,8,11,14,49,52,54,-34,-33,-29,-34,-32,-30,-8,-5,-3,26,27,29,43,43,44,55,55,58,59,59,63,-14,-16,-9,-24,-26,-19,48,48,52,64,64,68,10,9,13,-64,-66,-61,-70,-72,-67,-73,-73,-69,-75,-73,-70,-73,-72,-69,-71,-73,-68,-64,-67,-62,-45,-50,-45,-64,-64,-59,-43,-42,-38,-42,-40,-36,-23,-21,-17,23,25,28,41,42,43,24,26,28,-39,-38,-34,-74,-72,-67,-72,-69,-63,-18,-15,-12,43,46,48,-47,-46,-42,-73,-72,-68,-60,-59,-56,-44,-43,-41,-23,-24,-22,-9,-11,-7,-6,-7,-2,-50,-52,-45,-49,-50,-43,16,15,19,48,47,51,51,50,54,3,2,6,-45,-47,-42,-73,-72,-69,-75,-74,-70,-74,-74,-70,-71,-73,-69,-72,-75,-70,-62,-67,-62,-54,-53,-47,-41,-40,-35,-54,-53,-47,-35,-34,-28,10,11,15,35,35,36,28,30,31,-36,-34,-30,-72,-70,-65,-70,-67,-62,-49,-47,-43,26,29,31,-35,-33,-31,-76,-75,-71,-74,-73,-69,-70,-70,-67,-50,-52,-50,-55,-56,-52,-71,-73,-67,-72,-74,-67,-63,-65,-57,-54,-56,-51,-27,-29,-25,17,16,20,-9,-10,-6,-5,-6,-2,-60,-59,-55,-78,-77,-71,-74,-74,-70,-72,-74,-69,-71,-74,-69,-63,-69,-64,-49,-48,-42,-50,-50,-44,-56,-55,-49,-35,-33,-27,-1,-1,3,29,29,31,25,27,29,-41,-40,-36,-50,-48,-43,-16,-13,-7,-52,-51,-47,-5,-3,-1,-28,-26,-23,-75,-74,-71,-72,-71,-68,-70,-70,-67,-57,-59,-56,-62,-64,-60,-72,-74,-67,-71,-73,-66,-70,-72,-65,-71,-73,-67,-61,-62,-57,6,5,9,-37,-38,-33,-19,-21,-16,-49,-48,-44,-78,-77,-71,-74,-74,-70,-74,-75,-70,-72,-75,-70,-65,-70,-65,-55,-54,-47,-60,-59,-52,-51,-50,-43,-37,-36,-29,-21,-20,-16,7,7,8,-1,1,3,-55,-55,-50,-48,-46,-40,11,15,21,-47,-45,-41,-30,-29,-26,-19,-18,-15,-69,-69,-65,-70,-69,-65,-70,-70,-67,-62,-63,-60,-65,-67,-63,-71,-72,-67,-69,-71,-65,-71,-72,-65,-70,-71,-66,-74,-75,-71,-18,-19,-14,-1,-2,2,3,2,6,-31,-30,-27,-76,-75,-71,-75,-74,-70,-72,-74,-69,-59,-62,-57,-51,-54,-51,-62,-61,-54,-62,-62,-55,-49,-48,-42,-43,-42,-35,-38,-36,-32,-26,-24,-21,-36,-35,-32,-67,-66,-62,-60,-58,-54,-6,-3,1,-50,-48,-43,-29,-28,-22,-1,1,6,-62,-61,-55,-71,-70,-64,-68,-67,-64,-59,-57,-57,-67,-66,-65,-70,-69,-67,-69,-69,-67,-70,-69,-67,-71,-67,-65,-72,-70,-67,-36,-38,-33,5,3,8,6,4,11,-19,-18,-13,-76,-75,-71,-74,-73,-69,-70,-70,-66,-44,-45,-41,-30,-30,-26,-66,-65,-59,-65,-64,-58,-59,-59,-52,-57,-57,-50,-50,-48,-44,-41,-40,-36,-50,-48,-45,-69,-68,-65,-60,-59,-56,-5,-2,1,-54,-52,-46,-49,-47,-40,5,8,13,-45,-43,-38,-72,-70,-64,-62,-60,-58,-48,-47,-47,-59,-59,-58,-71,-70,-69,-70,-70,-69,-72,-69,-69,-70,-65,-64,-54,-52,-49,-36,-40,-34,-1,-5,3,13,11,19,5,5,11,-66,-67,-63,-72,-73,-68,-73,-74,-69,-71,-72,-67,-62,-63,-59,-65,-64,-58,-63,-62,-56,-65,-65,-59,-67,-66,-60,-66,-65,-60,-62,-60,-57,-62,-60,-57,-63,-62,-59,-63,-62,-59,-5,-4,-1,-42,-41,-35,-57,-57,-51,-9,-8,-2,-29,-28,-22,-67,-67,-60,-60,-60,-57,-49,-50,-49,-49,-50,-49,-69,-71,-67,-68,-69,-67,-70,-70,-69,-71,-68,-67,-33,-33,-31,-23,-27,-22,5,0,7,25,22,29,6,3,9,-59,-64,-59,-68,-73,-68,-70,-74,-69,-69,-74,-68,-70,-74,-69,-64,-64,-57,-59,-59,-52,-62,-62,-55,-70,-69,-63,-68,-67,-62,-72,-72,-67,-71,-71,-67,-68,-68,-64,-64,-64,-60,1,2,5,-21,-23,-17,-73,-75,-69,-37,-39,-33,-11,-13,-7,-54,-57,-50,-64,-67,-63,-61,-64,-61,-45,-48,-47,-64,-68,-66,-60,-64,-62,-67,-69,-67,-72,-72,-69,-32,-35,-33,-26,-33,-29,-10,-16,-11,43,42,47,-23,-28,-22,-69,-76,-70,-63,-70,-64,-59,-67,-60,-62,-69,-63,-66,-74,-67,-70,-69,-63,-67,-66,-60,-67,-66,-60,-68,-68,-62,-65,-65,-60,-72,-74,-69,-72,-73,-69,-70,-72,-67,-67,-68,-63,-4,-4,-1,8,5,9,-64,-69,-63,-58,-62,-56,-15,-18,-14,-34,-38,-33,-63,-69,-65,-60,-66,-64,-57,-62,-59,-57,-62,-60,-56,-62,-59,-54,-59,-57,-65,-69,-67,-49,-57,-54,-29,-39,-34,-14,-21,-16,28,25,29,-26,-31,-26,-49,-56,-50,-39,-47,-40,-32,-40,-34,-28,-36,-30,-30,-37,-31,-72,-72,-65,-72,-71,-65,-73,-72,-66,-73,-72,-66,-70,-71,-65,-71,-74,-69,-72,-75,-70,-72,-75,-69,-71,-74,-69,-44,-47,-42,32,29,33,-17,-22,-17,-62,-69,-63,-35,-41,-35,1,-4,1,-50,-57,-53,-50,-57,-54,-39,-46,-44,-36,-44,-42,-26,-33,-31,-27,-35,-32,-33,-41,-40,-26,-36,-34,-14,-26,-21,-19,-28,-22,15,12,16,-31,-35,-31,-58,-64,-58,-48,-54,-49,-46,-52,-46,-37,-43,-37,-37,-42,-37,-73,-72,-66,-73,-72,-66,-73,-73,-67,-74,-74,-67,-73,-74,-69,-71,-75,-70,-72,-75,-70,-70,-74,-69,-68,-73,-68,-67,-72,-67,-44,-52,-47,-39,-47,-42,-28,-36,-31,-18,-25,-21,28,21,25,2,-6,-3,-43,-53,-49,-41,-51,-47,-44,-53,-50,-38,-48,-45,-44,-54,-51,-40,-50,-50,-23,-36,-34,-18,-31,-27,-30,-40,-35,-34,-39,-35,-47,-49,-45,-70,-72,-67,-70,-73,-69,-73,-75,-70,-72,-75,-70,-72,-75,-70,-72,-71,-65,-72,-72,-65,-73,-73,-67,-73,-73,-67,-71,-72,-67,-61,-65,-60,-59,-62,-57,-54,-58,-52,-44,-47,-42,-46,-51,-45,-55,-63,-58,-42,-51,-47,-33,-42,-37,-40,-48,-44,0,-8,-4,31,23,26,-21,-31,-28,-36,-47,-43,-45,-57,-53,-35,-46,-42,-38,-49,-46,-34,-46,-45,-24,-38,-35,-32,-47,-42,-59,-69,-64,-60,-65,-60,-36,-37,-34,-64,-64,-60,-76,-75,-70,-76,-75,-70,-75,-75,-71,-75,-75,-70,-71,-70,-64,-73,-72,-66,-74,-74,-67,-74,-74,-67,-72,-72,-67,-67,-67,-62,-58,-59,-55,-46,-48,-44,-34,-37,-32,-31,-35,-31,-29,-39,-35,-29,-40,-35,-33,-44,-40,-45,-56,-52,-40,-51,-46,-3,-14,-10,-20,-31,-28,-33,-45,-41,-36,-47,-44,-39,-51,-47,-40,-52,-48,-36,-50,-47,-30,-45,-40,-37,-50,-46,-50,-60,-57,-54,-62,-59,-57,-62,-58,-69,-72,-67,-74,-74,-69,-75,-73,-69,-75,-75,-69,-73,-75,-69};

/*void
pre_processing(int* image_data){
  for(int i = 0 ; i < IMAGE_SIZE; i++) {
    image_data[i] = (image_data[i] >> 1) & 0x7f;
  }
}*/
void pre_processing(int *image_data , q7_t *img_buffer){
    for(int i = 0 ; i < 28*28 ; i ++){
  img_buffer[i] = (image_data[i]>>0);
  }

}

int
maximunloop(q7_t *img_buffer2)
{
  int return_type = 0;
  int type_value = -128;
  for (int i = 0; i < 10 ; i++){
    if(type_value < img_buffer2[i]){
      type_value = img_buffer2[i];
      return_type = i;
    }
  }
  return return_type;
}


/*void read(void){
  int i;
  while(port.readable()==0){};
  for(i=0;i<IMAGE_SIZE;i++){
    buffer[i]=port.getc();
  }
}*/
int j;
void Transform(unsigned char *data,int *input){
  for(j=0;j<IMAGE_SIZE;j++){
    input[j]=(int)data[j];
  }
}

int main()
{ 
  int result;
  int correct = 0;
  float acc = 0;
  float total = IMG_NUM;
  q7_t *result_buffer;

  while(1)
  { 
    result_buffer = cortexm_main(img);
    result = maximunloop(result_buffer);
    printf("predict result: %d\n", result);

  }
}
